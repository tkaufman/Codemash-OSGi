<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="com.pillartech.raffle.persistence [1.0-SNAPSHOT]">
    <groups>
    </groups>
    <test name="com.pillartech.raffle.persistence.internal.RaffleDAOImplTest">
      <class name="com.pillartech.raffle.persistence.internal.RaffleDAOImplTest">
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Failed to load ApplicationContext]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:201)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:255)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:443)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:160)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:90)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:183)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:115)
	at org.testng.TestRunner.runWorkers(TestRunner.java:908)
	at org.testng.TestRunner.privateRun(TestRunner.java:617)
	at org.testng.TestRunner.run(TestRunner.java:498)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:329)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:324)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:296)
	at org.testng.SuiteRunner.run(SuiteRunner.java:201)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:75)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:127)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.apache.commons.dbcp.BasicDataSource] for bean with name 'myDataSource' defined in class path resource [META-INF/spring/persistence-context.xml]; nested exception is java.lang.ClassNotFoundException: org.apache.commons.dbcp.BasicDataSource
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:758)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:422)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:84)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:42)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:173)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:197)
	... 26 more
Caused by: java.lang.ClassNotFoundException: org.apache.commons.dbcp.BasicDataSource
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:315)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:330)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:250)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 36 more
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_create_raffle_adds_a_row()" name="test_create_raffle_adds_a_row" duration-ms="5" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_create_raffle_adds_a_row()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_create_raffle_adds_child_entity()" name="test_create_raffle_adds_child_entity" duration-ms="1" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_create_raffle_adds_child_entity()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_create_raffle_saves_the_values()" name="test_create_raffle_saves_the_values" duration-ms="2" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_create_raffle_saves_the_values()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_delete_raffle_also_deletes_entities()" name="test_delete_raffle_also_deletes_entities" duration-ms="26" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_delete_raffle_also_deletes_entities()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_delete_raffle_leaves_no_trace()" name="test_delete_raffle_leaves_no_trace" duration-ms="2" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_delete_raffle_leaves_no_trace()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_delete_raffle_removes_a_row()" name="test_delete_raffle_removes_a_row" duration-ms="2" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_delete_raffle_removes_a_row()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="test_find_all_returns_a_the_correct_row()" name="test_find_all_returns_a_the_correct_row" duration-ms="2" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_find_all_returns_a_the_correct_row()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:03Z" finished-at="2010-01-02T12:11:03Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="test_find_all_returns_multiples()" name="test_find_all_returns_multiples" duration-ms="1" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_find_all_returns_multiples()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="test_find_all_returns_null_with_nothing_in_the_db()" name="test_find_all_returns_null_with_nothing_in_the_db" duration-ms="1" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_find_all_returns_null_with_nothing_in_the_db()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="test_update_raffle_leaves_num_of_rows()" name="test_update_raffle_leaves_num_of_rows" duration-ms="2" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_update_raffle_leaves_num_of_rows()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="create_raffle()" name="create_raffle" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="SKIP" signature="test_update_raffle_saves_the_values()" name="test_update_raffle_saves_the_values" duration-ms="1" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2010-01-02T12:11:04Z" finished-at="2010-01-02T12:11:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pillartech.raffle.persistence.internal.RaffleDAOImplTest.test_update_raffle_saves_the_values()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
